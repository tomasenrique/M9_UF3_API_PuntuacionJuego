API para guardar las puntuaciones de un juego

Hay que crear una API  donde podemos gestionar las puntuaciones de un juego:
inicialmente hay que ofrecer las operaciones:

1. Añadir una nueva puntuación

POST / juego / puntuaciones
{
    "usuari":1,
    "puntuacio": 2300
}



2. Consultar todas las puntuaciones
GET / juego / puntuaciones

ejemplo respuesta:
[
    {
        "usuari":1,
        "puntuacio": 2300
    },
    {
        "usuari":2,
        "puntuacio": 2520
    }
]

[ { "usuari":1, "puntuacio": 2300 }, { "usuari":2, "puntuacio": 2520 } ]

========================================================================================================================
EJM:

{
  "postList": {
                "0": {
                "post": "Hola de prueba"
                     },
                "1": {
                "post": "Este es el tercer post"
                    }
              }
}


{ "postList": { "0": { "post": "Hola de prueba" }, "1": { "post": "Este es el tercer post" } } }

========================================================================================================================


@RestController
public class ScoresController {

    private Scores scores = new Scores();

    // Este metodo enviara los datos a la API por medio de la url 'http://localhost:8080/game/score'
    @PostMapping("/game/score")
    public void addScore(@RequestBody Score score) {
        this.scores.addScore(score.getUser(), score.getScore()); // aqui se indica la cantidad de parametros a pasar, en este caso 2
    }
    /* EJM del POST
    POST http://localhost:8080/game/score
    Content-Type: application/json

    {
        "user":152,
        "score": 25
    }
    */

    // Este metodo obtendra los registros que tiene la API por medio de la url 'http://localhost:8080/game/score'
    @GetMapping("/game/score")
    public Scores getScores() {
        return this.scores;
    }

    /* EJM del GET
    GET http://localhost:8080/game/score

   {
      "scores": {
        "1": {
          "user": 152,
          "score": 25
        },
        "2": {
          "user": 2,
          "score": 258
        }
      }
    }
    */

}






















